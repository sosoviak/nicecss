/*------------------------------------*\
    $MIXINS
\*------------------------------------*/

@mixin font-size($font-size, $line-height:true){
    font-size:$font-size;
    font-size:($font-size / $base-font-size)*1rem;
    @if $line-height == true{
        line-height:ceil($font-size / $base-line-height) * ($base-line-height / $font-size);
    }
}

@mixin vendor($property, $value...){
    -webkit-#{$property}:$value;
       -moz-#{$property}:$value;
        -ms-#{$property}:$value;
         -o-#{$property}:$value;
            #{$property}:$value;
}

@mixin truncate($truncation-boundary){
    max-width:$truncation-boundary;
    white-space:nowrap;
    overflow:hidden;
    text-overflow:ellipsis;
}


@mixin respond-to($media){
  @each $breakpoint in $breakpoints{
      $name: nth($breakpoint, 1);
      $declaration: nth($breakpoint, 2);

      @if $media == $name and $declaration{
          @media only screen and #{$declaration}{
              @content;
          }
      }
  }
 }


@mixin opacity ( $value: 0.5 ) {
  opacity: $value;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=" $value * 100 ")";
  filter: alpha(opacity= $value * 100 );
  zoom: 1;
}


@mixin border-rounded ($value: 5px) {
    @include border-top-radius($value);
    @include border-bottom-radius($value);
    @include border-left-radius($value);
    @include border-right-radius($value);
}


@mixin box-shadow($top, $left, $blur, $color, $inset:"") {
    -webkit-box-shadow:$top $left $blur $color #{$inset};
    -moz-box-shadow:$top $left $blur $color #{$inset};
    box-shadow:$top $left $blur $color #{$inset};
}


@mixin box-emboss($opacity, $opacity2){
    box-shadow:white($opacity) 0 1px 0, inset black($opacity2) 0 1px 0;
}
