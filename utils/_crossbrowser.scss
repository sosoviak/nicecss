////
/// Cross browser utils
/// @author Nicemondays
/// @since version 0.1
////


/// Prefixer
/// @parameter {string} $property - Property name
/// @parameter {arglist} $value
/// @example
///   @include vendor(transform, scale(2));
@mixin vendor($property, $value...){
    -webkit-#{$property}:$value;
       -moz-#{$property}:$value;
        -ms-#{$property}:$value;
         -o-#{$property}:$value;
            #{$property}:$value;
}

/// Border radius builder
/// @parameter {number} $radius
/// @parameter {string} $corner [all]
/// @example
///   @include border-radius(20px, top);
@mixin border-radius($radius, $side:all) {
  @if $side == all {
    -webkit-border-radius: $radius;
    border-radius: $radius;
  } @else if $side == top {
    -webkit-border-top-right-radius: $radius;
    border-top-right-radius: $radius;
    -webkit-border-top-left-radius: $radius;
    border-top-left-radius: $radius;
  } @else if $side == right {
    -webkit-border-bottom-right-radius: $radius;
    border-bottom-right-radius: $radius;
    -webkit-border-top-right-radius: $radius;
    border-top-right-radius: $radius;
  } @else if $side == bottom {
    -webkit-border-bottom-right-radius: $radius;
    border-bottom-right-radius: $radius;
    -webkit-border-bottom-left-radius: $radius;
    border-bottom-left-radius: $radius;      
  } @else if $side == left {
    -webkit-border-bottom-left-radius: $radius;
    border-bottom-left-radius: $radius;
    -webkit-border-top-left-radius: $radius;
    border-top-left-radius: $radius;
  }
  background-clip: padding-box;
}

/// Box shadow builder
/// @parameter {arglist} $value
/// @example
///   @include box-shadow(inset 0 0 1em gold);
@mixin box-shadow($value...) {
    @include vendor(box-shadow, $value);
}

/// Opacity with legacy support
/// @parameter {number} $value [0.5]
/// @example
///   @include opacity(0.75);
@mixin opacity ( $value: 0.5 ) {
  opacity: $value;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=" $value * 100 ")";
  filter: alpha(opacity= $value * 100 );
  zoom: 1;
}

/// Setter for placeholder color
/// @parameter {color} $color
/// @example
///   @include placeholder(red);
@mixin placeholder($color) {
  ::-webkit-input-placeholder {
     color: $color;
  }
  :-moz-placeholder { /// Firefox 18
     color: $color;  
  }
  ::-moz-placeholder { /// Firefox 19
     color: $color;  
  }
  :-ms-input-placeholder {  
     color: $color;  
  }
}

/// Prefixer transition shortcut
/// @parameter {arglist} $args
/// @see {mixin} vendor
/// @example
///   @include transition(color .3s ease);
@mixin transition($args...) {
  @include vendor(transition, $args);
}

/// Shortcut for all properties transition
/// @parameter {string} $time - Transition duration
/// @parameter {string} $easing - Transition ease function
/// @see {mixin} transition
/// @example
///   @include effect(.5s);
@mixin effect($time:.3s, $easing: ease-in-out) {
  @include transition(all $time $easing);
}


/// Animation keyframe generator
/// @parameter {string} $animation-name
/// @content [CSS animation sequence]
/// @example
///   @include keyframes(slide-down) {
///     0% { opacity: 1; }
///     90% { opacity: 0; }
///   }
@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @-moz-keyframes #{$animation-name} {
    @content;
  }  
  @-ms-keyframes #{$animation-name} {
    @content;
  }
  @-o-keyframes #{$animation-name} {
    @content;
  }  
  @keyframes #{$animation-name} {
    @content;
  }
}

/// Cross browser animation
/// @parameter {arglist} $value
/// @example
///   .element {
///     @include animation('slide-down 5s 3');
///   }
@mixin animation($value) {
  -webkit-animation: #{$value};
  -moz-animation: #{$value};
  -ms-animation: #{$value};
  -o-animation: #{$value};
  animation: #{$value};
  @include vendor(animation-fill-mode, both);    
}

/// Shortcut for rotate transformation
/// @parameter {number} $value
/// @example
///   .element {
///     @include rotate(45deg);
///   }

@mixin rotate($value) {
  @include vendor(transform, rotate($value));
}

/// Shortcut for 3d rotate transformation
/// @parameter {arglist} $values
/// @example
///   .element {
///     @include rotate3d(45deg);
///   }
@mixin rotate3d($values...) {
  @include vendor(transform, rotate3d($values));
}
/// Shortcut for scale transformation
/// @parameter {number} $value
/// @example
///   .element {
///     @include scale(2);
///   }

@mixin scale($value) {
  @include vendor(transform, scale($value));
}
/// Shortcut for scaleX transformation
/// @parameter {number} $value
/// @example
///   .element {
///     @include scaleX(2);
///   }

@mixin scaleX($value) {
  @include vendor(transform, scaleX($value));
}

/// Shortcut for scaleY transformation
/// @parameter {number} $value
/// @example
///   .element {
///     @include scaleY(2);
///   }
@mixin scaleY($value) {
  @include vendor(transform, scaleY($value));
}

/// Shortcut for scale3d transformation
/// @parameter {arglist} $values
/// @example
///   .element {
///     @include scale3d(2);
///   }
@mixin scale3d($values...) {
  @include vendor(transform, scale3d($values));
}

/// Shortcut for translate transformation
/// @parameter {arglist} $values
/// @example
///   .element {
///     @include translate(20px, 30px);
///   }
@mixin translate($values...) {
  @include vendor(transform, translate($values));
}

/// Shortcut for translate3d transformation
/// @parameter {arglist} $values
/// @example
///   .element {
///     @include translate3d(20px, 30%, 50px);
///   }
@mixin translate3d($values...) {
  @include vendor(transform, translate3d($values));
}

/// Shortcut for translateX transformation
/// @parameter {number} $value
/// @example
///   .element {
///     @include translateX(2);
///   }
@mixin translateX($value) {
  @include vendor(transform, translateX($value));
}

/// Shortcut for translateY transformation
/// @parameter {number} $value
/// @example
///   .element {
///     @include translateY(2);
///   }
@mixin translateY($value) {
  @include vendor(transform, translateY($value));
}

/// Shortcut for translateZ transformation
/// @parameter {number} $value
/// @example
///   .element {
///     @include translateZ(2);
///   }
@mixin translateZ($value) {
  @include vendor(transform, translateZ($value));
}

/// Shortcut for perspective transformation
/// @parameter {number} $value
/// @example
///   .element {
///     @include perspective(2);
///   }
@mixin perspective($value) {
  @include vendor(transform, perspective($value));
}